# To test the schema: python tests/unit/test_schema.py TestUICatalog
#
# GENERIC CATALOG
#
# These are the generic entries that list all types and options available for
# generic and portable blueprints
name: server
display_name: Linux Server (Generic)
is: compute
provides:
- compute: ssh
options:
  memory:
    type: integer
    constraints:
    - greater-than: 0
    default: 512
  disk:
    type: integer
  disk-preference:
    type: string
    display-hints:
      choice:
      - name: Standard (SATA)
        value: 0
      - name: High (SSD)
        value: 1
  ssh_port:
    type: integer
    label: "SSH port"
  os:
    type: string
    display-hints:
      choice:
      - name: CoreOS (Alpha)
        value: Coreos 0
      - name: CoreOS (Beta)
        value: Coreos
      - name: CoreOS (Stable)
        value: Coreos
      - name: FreeBSD 10.0
        value: Freebsd 10.0
      - name: Arch 2014.10 (PVHVM)
        value: Archlinux 2014.8
      - name: Ubuntu 14.04 LTS (Trusty Tahr)
        value: Ubuntu 14.04
      - name: Ubuntu 10.04 LTS (Lucid Lynx)
        value: Ubuntu 10.04
      - name: Debian 6 (Squeeze)
        value: Debian 6.10
      - name: CentOS 6.5
        value: Centos 6.5
      - name: Ubuntu 14.10 (Utopic Unicorn)
        value: Ubuntu 14.10
      - name: Red Hat Enterprise Linux 6.6
        value: Redhat 6.6
      - name: Ubuntu 12.04 LTS (Precise Pangolin)
        value: Ubuntu 12.04
      - name: CentOS 5.11
        value: Centos 5.11
      - name: Red Hat Enterprise Linux 5.11
        value: Redhat 5.11
      required: true
meta-data:
  display-hints:
    icon-20x20: "/images/icon-servers.svg"
    tattoo: "/images/icon-servers.svg"
---
name: load-balancer
is: load-balancer
display_name: Load Balancer (Generic)
provides:
- load-balancer: vip
- load-balancer: proxy
- load-balancer: '*'
supports:
- '*': '*'
options:
  algorithm:
    type: string
    constraints:
    - in:
      - LEAST_CONNECTIONS
      - RANDOM
      - ROUND_ROBIN
      - WEIGHTED_LEAST_CONNECTIONS
      - WEIGHTED_ROUND_ROBIN
  allow_unencrypted:
    type: boolean
    default: false
  redirect_unencrypted:
    type: boolean
    default: false
  protocol:
    type: string
    constraints:
    - in:
      - dns_tcp
      - dns_udp
      - ftp
      - http
      - https
      - imaps
      - imapv2
      - imapv3
      - imapv4
      - ldap
      - ldaps
      - mysql
      - pop3
      - pop3s
      - sftp
      - smtp
      - tcp
      - tcp_client_first
      - tcp_stream
      - udp
      - udp_stream
      - proxy
      - vip
  port:
    type: integer
    constraints:
    - greater-than: 0
      less-than-or-equal: 65535
      message: port must be in the range 1 to 65535
meta-data:
  display-hints:
    icon-20x20: "/images/icon-load-balancing.png"
    tattoo: "/images/icon-load-balancing.png"
---
is: application
name: app
display_name: GitHub App
provides:
- application: http
requires:
- host: linux
supports:
- '*': '*'
options:
  source:
    type: string
    label: "Source Repo"
  branch:
    type: string
    label: "Ref (branch/tag/commit)"
  role:
    type: string
meta-data:
  display-hints:
    icon-20x20: "/images/github.ico"
    tattoo: "/images/github-tattoo.png"
---
name: mongodb
display_name: MongoDB Database (Generic)
is: database
provides:
- database: mongodb
options:
  role:
    default: primary
    type: string
    constraints:
    - in: [primary, arbiter, secondary]
  full-text:
    type: boolean
    label: "Enable Full Text Indexing"
meta-data:
  display-hints:
    icon-20x20: "/images/mongodb-icon-20x20.png"
    tattoo: "/images/mongodb-tattoo.png"
---
name: postgres
display_name: PostgreSQL Database (Generic)
is: database
provides:
- database: postgres
requires:
- host: linux
meta-data:
  display-hints:
    icon-20x20: "/images/postgres-icon.png"
    tattoo: "/images/postgre_sql_256.png"
---
name: mysql
display_name: MySQL Database (Generic)
is: database
provides:
- database: mysql
options:
  role:
    default: master
    type: string
    constraints:
    - in: [master, slave]
  server_root_password:
    default: '=generate_password(min_length=12, required_chars=[\"0123456789\", \"abcdefghijklmnopqrstuvwxyz\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"])'
    required: true
    type: password
    display-hints:
      group: application
      order: 1
    constraints:
    - regex: "^((.){8,255})?$"
      message: "must be between 8 and 255 characters long if provided"
  username:
    default: root
    required: true
    type: string
    display-hints:
      group: application
      order: 2
  password:
    default: '=generate_password(min_length=12, required_chars=[\"0123456789\", \"abcdefghijklmnopqrstuvwxyz\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"])'
    required: true
    type: password
    display-hints:
      group: application
      order: 3
    constraints:
    - regex: "^((.){8,255})?$"
      message: "must be between 8 and 255 characters long if provided"
  port:
    type: integer
    default: 3306
    label: "Listening port"
meta-data:
  display-hints:
    icon-20x20: "/images/mysql-small.png"
    tattoo: "/images/mysql-tattoo.png"
---
name: memcached
display_name: Memcached (Generic)
is: cache
provides:
- cache: memcache
requires:
- host: linux
options:
  port:
    type: integer
    label: "Listening port"
meta-data:
  display-hints:
    icon-20x20: "/images/memcached-icon-20x20.png"
    tattoo: "/images/memcached-tattoo.png"
---
id: redis
display_name: Redis (Generic)
is: cache
name: redis
provides:
- cache: redis
- database: redis
requires:
- host: linux
options:
  role:
    default: master
    type: string
    constraints:
    - in: [master, slave, sentinel]
  memory:
    type: integer
    label: "Minimum Memory"
  port:
    type: integer
    default: 6379
    label: "Listening port"
meta-data:
  display-hints:
    icon-20x20: "/images/redis-icon-20x20.png"
    tattoo: "/images/redis-tattoo.png"
---
id: varnish
display_name: Varnish (Generic)
is: cache
requires:
- host: linux
provides:
- cache: varnish
options:
  memory:
    type: integer
    label: "Minimum Memory"
meta-data:
  display-hints:
    icon-20x20: "/images/varnish.jpg"
    tattoo: "/images/varnish.jpg"
---
id: gluster
display_name: GlusterFS (Generic)
is: storage
requires:
- host: linux
provides:
- storage: gluster
meta-data:
  display-hints:
    icon-20x20: "/images/glusterfs-icon-20x20.png"
    tattoo: "/images/glusterfs-tattoo.png"
---
id: wordpress
display_name: Wordpress (Generic)
is: application
provides:
- application: http
requires:
- host: linux
- database: mysql
options:
  prefix:
    type: string
    label: "Prefix"
  url:
    label: "Site Address"
    description: "The address you wish to host your blog on."
    type: "url"
    required: true
    default: "http://example.com/"
    display-hints:
      group: application
      order: 1
      default-protocol: http
      encrypted-protocols:
      - https
      sample: "http://example.com/"
    constraints:
    - protocols:
      - http
      - https
      message: "must be a supported protocol"
    - regex: "^([a-zA-Z]{2,}?\\:\\/\\/[a-zA-Z0-9\\-]+(?:\\.[a-zA-Z0-9\\-]+)*\\.[a-zA-Z]{2,16}(?:\\/?|(?:\\/[\\w\\-]+)*)(?:\\/?|\\/\\w+\\.[a-zA-Z]{2,4}(?:\\?[\\w]+\\=[\\w\\-]+)?)?(?:\\&[\\w]+\\=[\\w\\-]+)*)$"
      message: "must be a valid web address"
meta-data:
  display-hints:
    icon-20x20: "/images/wordpress-icon-20x20.png"
    tattoo: "/images/wordpress-tattoo.png"
---
is: application
name: magento
display_name: Magento (Generic)
provides:
- application: http
requires:
- host: linux
- database: mysql
supports:
- FPC:
    resource_type: cache
    interface: {from: [redis, memcache]}
- sessions:
    resource_type: cache
    interface: {from: [redis, memcache]}
- objects:
    resource_type: cache
    interface: {from: [redis, memcache]}
meta-data:
  display-hints:
    icon-20x20: "/images/magento-icon-20x20.png"
    tattoo: "/images/magento-tattoo.png"

---
name: apache
is: web
requires:
- host: linux
provides:
- web: apache
supports:
- application: '*'
options:
  server_alias:
    type: array
    display-hints:
      sample: blog.example.com
    label: "Additional domain names to respond on"
  port:
    default: 80
    type: integer
    label: "Listening port"
  server_name:
    type: string
    display-hints:
      sample: "example.com"
    label: "Site's domain name"
meta-data:
  display-hints:
    icon-20x20: "/images/apache-small.png"
    tattoo: "/images/apache.png"
---
name: "nginx"
is: "web"
requires:
- host: linux
provides:
- web: "nginx"
meta-data:
  display-hints:
    icon-20x20: "/images/nginx.png"
    tattoo: "/images/nginx.png"


#
# Specific, non-portable components
#
---
id: new-relic
is: monitoring
provides:
- monitoring: "new-relic"
requires:
- host: linux
options:
  license:
    type: string
    label: "New Relic license key"
meta-data:
  display-hints:
    icon-20x20: "/images/newrelic.png"
    tattoo: "/images/newrelic.png"
---
id: "rax-cloud-monitoring"
is: "monitoring"
provides:
- monitoring: "rackspace"
requires: []
options: {}
meta-data:
  display-hints:
    icon-20x20: "/images/icon-monitoring.svg"
    tattoo: "/images/icon-monitoring.svg"
---
id: "opscode.chef-server.mysql"
is: "database"
name: "mysql"
display_name: "MySQL (Chef Server)"
provider: "opscode.chef-server"
provides:
- database: mysql
requires:
- host: linux
options:
  server_root_password:
    default: '=generate_password(min_length=12, required_chars=[\"0123456789\", \"abcdefghijklmnopqrstuvwxyz\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"])'
    required: true
    type: password
    display-hints:
      group: application
      order: 1
    constraints:
    - regex: "^((.){8,255})?$"
      message: "must be between 8 and 255 characters long if provided"
  username:
    default: root
    required: true
    type: string
    display-hints:
      group: application
      order: 2
  password:
    default: '=generate_password(min_length=12, required_chars=[\"0123456789\", \"abcdefghijklmnopqrstuvwxyz\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"])'
    required: true
    type: password
    display-hints:
      group: application
      order: 3
    constraints:
    - regex: "^((.){8,255})?$"
      message: "must be between 8 and 255 characters long if provided"
meta-data:
  display-hints:
    icon-20x20: "/images/mysql-small.png"
    tattoo: "/images/mysql-tattoo.png"
---
id: mysql_database
is: database
name: mysql
display_name: "Cloud Database (MySQL)"
provider: "rackspace.databases"
provides:
- database: mysql
requires:
- interface: mysql
  relation: host
  resource_type: compute
options:
  server_root_password:
    default: '=generate_password(min_length=12, required_chars=[\"0123456789\", \"abcdefghijklmnopqrstuvwxyz\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"])'
    required: true
    type: password
    display-hints:
      group: application
      order: 1
    constraints:
    - regex: "^((.){8,255})?$"
      message: "must be between 8 and 255 characters long if provided"
  username:
    default: root
    required: true
    type: string
    display-hints:
      group: application
      order: 2
  password:
    default: '=generate_password(min_length=12, required_chars=[\"0123456789\", \"abcdefghijklmnopqrstuvwxyz\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"])'
    required: true
    type: password
    display-hints:
      group: application
      order: 3
    constraints:
    - regex: "^((.){8,255})?$"
      message: "must be between 8 and 255 characters long if provided"
meta-data:
  display-hints:
    icon-20x20: "/images/icon-databases.svg"
    tattoo: "/images/icon-databases.svg"
---
id: redis_cache
is: cache
name: redis
display_name: "Cloud Redis"
provider: "rackspace.databases"
options:
  memory:
    constraints:
    - in:
      - 512
      - 1024
      - 2048
      - 4096
    type: integer
    unit: Mb
    display-hints:
      group: "cache"
      order: 1
  password:
    required: false
    type: string
  username:
    required: true
    type: string
provides:
- cache: redis
meta-data:
  display-hints:
    icon-20x20: "/images/redis-icon-20x20.png"
    tattoo: "/images/redis-tattoo.png"
---
is: storage
id: "rax-cloud-files"
meta-data:
  display-hints:
    icon-20x20: "/images/icon-files.svg"
    tattoo: "/images/icon-files.svg"
---
is: application
id: php_app
display_name: PHP App (Generic)
provides:
- application: http
requires:
- host: linux
options:
  demo:
    type: boolean
    label: "Enable Demo"
  packages:
    type: string
    label: "PHP Packages"
meta-data:
  display-hints:
    icon-20x20: "/images/github.ico"
    tattoo: "/images/github-tattoo.png"
---
is: application
id: "magentostack"
display_name: Magento Stack
provides:
- application: http
requires:
- host: linux
- database: mysql
supports:
- cache: 'redis#sessions'  # shorthand
- objects:  # long form, one interface
    interface: redis
    resource_type: cache
- FPC:  # long form with optional interfaces
    resource_type: cache
    interface: {from: [redis, memcache]}
meta-data:
  display-hints:
    icon-20x20: "/images/magento-icon-20x20.png"
    tattoo: "/images/magento-tattoo.png"
options:
  "domain":
    type: string
  "admin_frontname":
    type: string
    default: admin
  "firstname":
    type: string
    default: Admin
  "lastname":
    type: string
    default: User
  "email":
    type: string
    required: true
  "newrelic":
    type: string
  "username":
    type: string
    default: MagentoAdmin
    required: true
  "password":
    type: string
    default: =generate_password(min_length=12, required_chars=["0123456789", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ"])
    required: true
  "demo":
    type: boolean
    default: true
    required: true
  "newrelic":
    type: boolean
    default: false
    required: true
  "database_prefix":
    type: string
    default: magento_
---
is: application
id: "asp.net"
provides:
- application: http
requires:
- host: "windows"
meta-data:
  display-hints:
    icon-20x20: "/images/asp-net-icon-20x20.png"
    tattoo: "/images/asp-net-tattoo.png"
---
id: "rsCloudLB"
name: load-balancer
is: load-balancer
provides:
- load-balancer: vip
- load-balancer: proxy
- load-balancer:
    from:
    - dns_tcp
    - dns_udp
    - ftp
    - http
    - https
    - imaps
    - imapv2
    - imapv3
    - imapv4
    - ldap
    - ldaps
    - mysql
    - pop3
    - pop3s
    - sftp
    - smtp
    - tcp
    - tcp_client_first
    - tcp_stream
    - udp
    - udp_stream
requires:
- application: http
supports:
- '*':
    from:
    - dns_tcp
    - dns_udp
    - ftp
    - http
    - https
    - imaps
    - imapv2
    - imapv3
    - imapv4
    - ldap
    - ldaps
    - mysql
    - pop3
    - pop3s
    - sftp
    - smtp
    - tcp
    - tcp_client_first
    - tcp_stream
    - udp
    - udp_stream
options:
  algorithm:
    type: string
    constraints:
    - in:
      - LEAST_CONNECTIONS
      - RANDOM
      - ROUND_ROBIN
      - WEIGHTED_LEAST_CONNECTIONS
      - WEIGHTED_ROUND_ROBIN
  create_dns:
    type: boolean
    default: false
  allow_unencrypted:
    type: boolean
    default: false
  protocol:
    type: string
    constraints:
    - in:
      - dns_tcp
      - dns_udp
      - ftp
      - http
      - https
      - imaps
      - imapv2
      - imapv3
      - imapv4
      - ldap
      - ldaps
      - mysql
      - pop3
      - pop3s
      - sftp
      - smtp
      - tcp
      - tcp_client_first
      - tcp_stream
      - udp
      - udp_stream
      - proxy
      - vip
meta-data:
  display-hints:
    icon-20x20: "/images/icon-load-balancers.svg"
    tattoo: "/images/icon-load-balancers.svg"
---
id: "rax:dns"
is: dns
meta-data:
  display-hints:
    icon-20x20: "/images/icon-dns.svg"
    tattoo: "/images/icon-dns.svg"
---
id: generic-chef-tier
display_name: Chef Tier (Generic)
is: application
provides:
- application: http
requires:
- host: linux
options:
  berks_entry:
    type: text
  run_list:
    type: text
  count:
    type: integer  # we don't really need this in the catalog
meta-data:
  display-hints:
    icon-20x20: "/images/chef-icon-20x20.png"
    tattoo: "/images/chef-tattoo.png"

