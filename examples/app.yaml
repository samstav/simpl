# **CheckMate** is a configuration management REST service written in python.
# The source can be found [here](http://github.com/ziadsawalha/checkmate)
#
# This sample configuration file can be used to deploy a wordpress application
# to the cloud. It also currently serves as the main reference for the
# CheckMate configuration syntax.
#
# %(VARIABLE)s can be replaced by with your local variables
# before posting it to checkmate like this:
#
#     awk '{while(match($0,"[%][\\(][^\\)]*\\)[s]")) {var=substr($0,RSTART+2,RLENGTH -4);gsub("[%][(]"var"[)][s]",ENVIRON[var])}}1' < app.yaml
#
# To transform and send the output to checkmate:
#
#     awk '{while(match($0,"[%][\\(][^\\)]*\\)[s]")) {var=substr($0,RSTART+2,RLENGTH -4);gsub("[%][(]"var"[)][s]",ENVIRON[var])}}1' < app.yaml | curl -H 'content-type: application/x-yaml' http://localhost:8080/deployments --data-binary @-


#### ALPHA STATUS
#
# This syntax is under development (and open for discussion). So, in order to
# distinguish what has been implemnted in the code, versus what is only being
# discussed in this document, any piece that is actually used in the code is
# marked with the comment #IMPLEMENTED at the end of the document which shows
# a sample deployment after checkmate has processed it


#### Application
# This file defines all the aspects of a number of possible wordpress
# deployments. The pieces it brings together are
# [components](#components),
# environments,
# blueprints,
# and deployments.

# <a id="components" />
#### Components
# Components define the basic building blocks for checkmate. We use a syntax
# similar to Juju Charm syntax

#Definitions of components/services used in this file
components:
  # the name of the component and an optional anchor (any unique name preceded by &) which
  # can be used to reference it from elsewhere in the file
  wordpress: &wordpress1
    id: wordpress1
    # revisions track multiple versions of a component definition
    revision: 3
    # a short description of the component
    summary: "A pretty popular blog engine"
    # the interfaces it provides (a web service on port 80, a database host,
    # etc...). Accepted list is:
    #    - url: an internet resource accessible over a URL (http[s], ftp, etc)
    #    - db: a database
    provides:
      url:
        interface: http
    requires:
      db:
       interface: mysql
    # User/consumer options - these are less technical and can change settings
    options:
      url:
        type: String
        default: localhost
        description: the url to use to host your blog on
      high-availability:
        type: Boolean
        default: false
        description: build in redundancy? If not, build one server.
    # Advanced settings - technical
    settings:
      machine/flavor:
        default: 1  # flavor=256mb. TODO: or maybe something more generic
        description: the type (and size) of machine to use
        type: {1: "256Mb", 2: "512Mb"} # TODO: How do we link this to a list of images?
      machine/os:
        default: Ubuntu 11.10  # Translated to image 119 by Rax provider.
        description: the operating system and version to use
      machine/count:
        default: 1
        description: the number of machines to spin up

  mysql: &mysql
    id: mysql
    revision: 1
    summary: "A pretty popular database"
    provides:
      db: mysql
    # Advanced settings - technical
    settings:
      password:
        type: String
        default: =generate()  # TODO: think about how best to represent this.
        description: the password for the database
      machine/flavor:
        default: 1  # flavor=512mb.
        description: the type (and size) of machine to use

#### Blueprints

# An architecture template
# This would be where we define the architecture of an application which would include
# all the components, tiers, connections, and scaling rules for that application
blueprint: &wp
  name: Simple Wordpress
  services:
    wordpress:
      config: *wordpress1 #Reference in local file
      exposed: true
      open-ports: [80/tcp]
      relations: {db: database}  # resource-type: service
    database: #TODO: remove hard coding against this name. Thinak about what these names mean. These are basically tiers...
      config: *mysql  #TODO: support local (same server) and remote links like local://components/mysql


#### Environments

# A test environment
environment: &env1
  name: rackcloud-test
  # The idea behind providers is that the environment can be configured to use different providers for different types of resources
  # For example, we could use Cloud Servers or Dedicated Servers as a compute provider.
  # The intent is that these providers can be extracted automatically from the service catalog when authenticating, but including providers here
  # means we can pre-determine or hard-code them if we want to.
  providers:
  - compute: &rax-cloud-servers
    vendor: rackspace
    constraints:
    - region: %(CHECKMATE_REGION)s                                               #IMPLEMENTED at root of env, but not under constraints
  - loadbalancer: &rax-lbaas
    endpoint: https://lbaas.api.rackpsacecloud.com/servers/{tenantId}
  - database: &rax-dbaas
    endpoint: https://database.api.rackpsacecloud.com/servers/{tenantId}
  - common:
    vendor: rackspace
    credentials:
    - rackspace:
      username: %(CHECKMATE_USERNAME)s
      apikey: %(CHECKMATE_APIKEY)s

# Another environment referenced with the anchor &dfw and named rackcloud-prod
environment: &dfw
  name: rackcloud-prod
  region: dfw
  providers:
  - common:
    vendor: rackspace
    credentials:
    - rackspace:
      username: %(CHECKMATE_USERNAME)s
      apikey: %(CHECKMATE_APIKEY)s
    - ssh:
      public_key: %(STOCKTON_PUBLIC_KEY)s
      private_key: %(STOCKTON_PRIVATE_KEY)s

#### Deployments

# Actual deployment instances. These are our live, running systems
deployment:                                                                     #IMPLEMENTED - checkmate looks for this
  blueprint: *wp
  environment: *env1
  inputs:
    domain: %(CHECKMATE_DOMAIN)s
    ssl: false
    region: chicago # TODO: this is still read from os.environ
    high-availability: false
    requests-per-second: 60
    database:machine/flavor: 2
    wordpress:machine/flavor: 2  # Is this how we want to do this? THat would mnean no colons in settings names...
    wordpress:machine/count: 2

#### Sample Output
#-POSTed added to prevent checkmate from looking at this when we post this doc for testing
# Note that when the deployment is sent to checkmate, it resolves all references and discards ones that are not used or needed (like th &dfw environment)
deployment-POSTed: &db629b561da7418aaa324c6b741b5b22
  id: db629b561da7418aaa324c6b741b5b22                                          #IMPLEMENTED - generated if not provided
  blueprint:                                                                    #IMPLEMENTED - the references are resolved into copies if available
    services:
      database:
        config::
          id: mysql
          provides:
            db: mysql
          revision: 1
          settings:
            machine/flavor:
              default: 1
              description: the type (and size) of machine to use
            password:
              default: =generate()
              description: the password for the database
              type: String
          summary: A pretty popular database
        machines:
        - 3
      name: Simple Wordpress
      wordpress:
        config:
          id: wordpress1
          options:
            high-availability:
              default: false
              description: build in redundancy? If not, build one server.
              type: Boolean
            url:
              default: localhost
              description: the url to use to host your blog on
              type: String
          provides:
            url:
              interface: http
          requires:
            db:
              interface: mysql
          revision: 3
          settings:
            machine/count:
              default: 1
              description: the number of machines to spin up
            machine/flavor:
              default: 1
              description: the type (and size) of machine to use
              type:
                '1': 256Mb
                '2': 512Mb
            machine/os:
              default: Ubuntu 11.10
              description: the operating system and version to use
          summary: A pretty popular blog engine
        exposed: true
        machines:
        - 0
        - 1
        open-ports:
        - 80/tcp
        relations:
          db: mysql
    component: checkmate-reference://apache                                       #IMPLEMENTED - references not available in doc are converted to URIs
  environment:
    name: rackcloud-test
    providers:
    - compute: null
      constraints:
      - region: chicago
      vendor: rackspace
    - endpoint: https://lbaas.api.rackpsacecloud.com/servers/{tenantId}
      loadbalancer: null
    - database: null
      endpoint: https://database.api.rackpsacecloud.com/servers/{tenantId}
    - common: null
      credentials:
      - apikey: ababbbad29239481273469ab1f8234ff                                #IMPLEMENTED & hard-coded for this exact position
        rackspace: null
        username: username                                                      #IMPLEMENTED & hard-coded for this exact position
      vendor: rackspace
  inputs:                                                                       #IMPLEMENTED - checkmate expects this
    database:machine/flavor: 2
    domain: highbridgellc.com                                                   #IMPLEMENTED - used for resource naming
    high-availability: false                                                    #IMPLEMENTED - used to calculate how many resources to create
    region: chicago                                                             #IMPLEMENTED - checkmate uses this to fille the stockton deployment dict
    requests-per-second: 60                                                     #IMPLEMENTED - used to calculate how many resources to create
    ssl: false
    wordpress:machine/count: 2
    wordpress:machine/flavor: 2
  resources:                                                                    #IMPLEMENTED - checkmate creates this to store all resources it creates
    0:
      async_task_id: 2a88e3a0-080a-4879-a269-0b4b029001d6                       #IMPLEMENTED - this is how checkmate tracks async, celery tasks
      dns-name: CMDEP-db629b561da7418aaa324c6b741b5b22-web1.highbridgellc.com   #IMPLEMENTED - this is generated
      flavor: 2
      image: 119
      instance-id: null
      type: server
    1:
      dns-name: CMDEP-bf86f43d55aa4088bd94e68af61d5c9c-web2.rackcloudtech.com
      flavor: 2
      image: 119
      instance-id: null
      type: server
    2:
      dns-name: CMDEP-bf86f43d55aa4088bd94e68af61d5c9c-lb1.rackcloudtech.com
      instance-id: null
      type: load-balancer
    3:
      dns-name: CMDEP-bf86f43d55aa4088bd94e68af61d5c9c-db1.rackcloudtech.com
      flavor: 2
      instance-id: null
      type: database
workflow:
  attributes: {}
  last_task: null
  success: true
  task_tree:
    attributes: {}
    children:
    - attributes: {}
      children:
      - attributes:
          deployment: *db629b561da7418aaa324c6b741b5b22
        children:
        - attributes: {}
          children: []
          id: 4
          internal_attributes: {}
          last_state_change: 1335666793.35341
          parent: 3
          state: 1
          task_spec: Write Token to Deployment
        id: 3
        internal_attributes: {}
        last_state_change: 1335666793.353387
        parent: 2
        state: 1
        task_spec: Authenticate
      id: 2
      internal_attributes: {}
      last_state_change: 1335666793.353498
      parent: 1
      state: 16
      task_spec: Start
    id: 1
    internal_attributes: {}
    last_state_change: 1335666793.353313
    parent: null
    state: 64
    task_spec: Root
  wf_spec:
    description: ''
    file: null
    name: Simple Wordpress Workflow
    task_specs:
      Authenticate:
        args:
        - - Attrib
          - deployment
        call: stockton.auth.distribute_get_token
        class: SpiffWorkflow.specs.Celery.Celery
        defines: {}
        description: ''
        id: 2
        inputs:
        - Start
        internal: false
        kwargs: {}
        locks: []
        lookahead: 2
        manual: false
        name: Authenticate
        outputs:
        - Write Token to Deployment
        post_assign: []
        pre_assign: []
        properties: {}
        result_key: token
      Create DB:3:
        args:
        - - spiff:value
          - CMDEP-47059fddd1aa46fca55c272583dc328a-web2.rackcloudtech.com
        - - spiff:value
          - 1
        - - spiff:value
          - 2
        - - spiff:value
          - dbs?
        - - spiff:value
          - username
        - - spiff:value
          - password
        call: stockton.db.distribute_create
        class: SpiffWorkflow.specs.Celery.Celery
        defines: {}
        description: ''
        id: 7
        inputs:
        - Write Token to Deployment
        internal: false
        kwargs:
          update_chef:
          - spiff:value
          - false
        locks: []
        lookahead: 2
        manual: false
        name: Create DB:3
        outputs: []
        post_assign: []
        pre_assign: []
        properties: {}
        result_key: stockton.db.distribute_create
      Create Server:0:
        args:
        - - Attrib
          - deployment
        - - spiff:value
          - CMDEP-47059fddd1aa46fca55c272583dc328a-web1.rackcloudtech.com
        call: stockton.server.distribute_create
        class: SpiffWorkflow.specs.Celery.Celery
        defines: {}
        description: ''
        id: 5
        inputs:
        - Write Token to Deployment
        internal: false
        kwargs:
          api_object:
          - spiff:value
          - null
          files:
          - spiff:value
          - {}
          flavor:
          - spiff:value
          - 2
          image:
          - spiff:value
          - 119
          ip_address_type:
          - spiff:value
          - public
        locks: []
        lookahead: 2
        manual: false
        name: Create Server:0
        outputs: []
        post_assign: []
        pre_assign: []
        properties: {}
        result_key: stockton.server.distribute_create
      Create Server:1:
        args:
        - - Attrib
          - deployment
        - - spiff:value
          - CMDEP-47059fddd1aa46fca55c272583dc328a-web2.rackcloudtech.com
        call: stockton.server.distribute_create
        class: SpiffWorkflow.specs.Celery.Celery
        defines: {}
        description: ''
        id: 6
        inputs:
        - Write Token to Deployment
        internal: false
        kwargs:
          api_object:
          - spiff:value
          - null
          files:
          - spiff:value
          - {}
          flavor:
          - spiff:value
          - 2
          image:
          - spiff:value
          - 119
          ip_address_type:
          - spiff:value
          - public
        locks: []
        lookahead: 2
        manual: false
        name: Create Server:1
        outputs: []
        post_assign: []
        pre_assign: []
        properties: {}
        result_key: stockton.server.distribute_create
      Root:
        class: SpiffWorkflow.specs.Simple.Simple
        defines: {}
        description: ''
        id: 4
        inputs: []
        internal: false
        locks: []
        lookahead: 2
        manual: false
        name: Root
        outputs: []
        post_assign: []
        pre_assign: []
        properties: {}
      Start:
        class: SpiffWorkflow.specs.StartTask.StartTask
        defines: {}
        description: ''
        id: 1
        inputs: []
        internal: false
        locks: []
        lookahead: 2
        manual: false
        name: Start
        outputs:
        - Authenticate
        post_assign: []
        pre_assign: []
        properties: {}
      Write Token to Deployment:
        class: SpiffWorkflow.specs.Transform.Transform
        defines: {}
        description: ''
        id: 3
        inputs:
        - Authenticate
        internal: false
        locks: []
        lookahead: 2
        manual: false
        name: Write Token to Deployment
        outputs:
        - Create Server:0
        - Create Server:1
        - Create DB:3
        post_assign: []
        pre_assign: []
        properties: {}
        transforms:
        - my_task.attributes['deployment']['authtoken']=my_task.attributes['token']
  workflow: SpiffWorkflow.specs.WorkflowSpec.WorkflowSpec

components: &exceptional-scenarios
  test: *nosql  # Just to test an unknown reference. Should translate to a local URI.


#
# This documentation written to generate HTML by Docco.
# To regenerate and preview:
#
#     docco app.yaml && open docs/app.html
