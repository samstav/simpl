# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
#
# Running "tox" alone will run a simple test
#
# Running "tox -e full" will run a full test suite
#


[tox]
envlist = py27

##############
#  DEFAULT   #
##############
[testenv]
# This is the default setup. All other environments will inherit these settings

# pull in dependencies from t=our pip-* files
deps=   -r{toxinidir}/pip-requirements.txt
        -r{toxinidir}/pip-test-requirements.txt

# run nose and fail on first error
# run linting for code quality (and mainly pep8) on checkmate only by default
commands=
    nosetests -x {posargs}
    flake8 --exit-zero {posargs:checkmate}

# Cache pip downloads between runs and environments
downloadcache={toxinidir}/.tox/pip-cache


##############
# FULL       #
##############
[testenv:full]
# This is the full monty

# Run nose with coverage
# Run pylint and flake8 (disable error reporting for now)
commands =
    nosetests {posargs} --with-xcoverage --cover-package=checkmate --cover-tests --xcoverage-file=coverage.xml
    # Skipping errors on lint for now
    /bin/bash -c "flake8 {posargs:checkmate tests bin} | tee flake8.out || exit 0"
    /bin/bash -c "pylint -f parseable {posargs:checkmate tests bin} | tee pylint.out || exit 0"

##############
# END TO END #
##############
[testenv:e2e]
# This is full end to end testing

setenv =
    PYTHONPATH=$PYTHONPATH:{envdir}/CloudCAFE/lib

# Run nose with coverage
# Run pylint and flake8 (disable error reporting for now)
commands =
    pip install requests
    /bin/rm -rf {envdir}/CloudCAFE
    /usr/bin/git clone https://github.rackspace.com/nath5505/CloudCAFE-Python {envdir}/CloudCAFE
    {envdir}/CloudCAFE/bin/runner.py checkmate qa.config -p pos_regr

##############
# SMOKETEST  #
##############
[testenv:smoke]
# This is full end to end testing

setenv =
    PYTHONPATH=$PYTHONPATH:{envdir}/CloudCAFE/lib

# Run nose with coverage
# Run pylint and flake8 (disable error reporting for now)
commands =
    pip install requests
    /bin/rm -rf {envdir}/CloudCAFE
    /usr/bin/git clone https://github.rackspace.com/nath5505/CloudCAFE-Python {envdir}/CloudCAFE
    {envdir}/CloudCAFE/bin/runner.py checkmate qa.config -m smoketest

[flake8]
#flake8 default settings
#ignore = E226,E302,E41
#max-line-length = 160
max-complexity = 12


[tox:jenkins]
# Settings only valid in Jenkins
downloadcache = ~/cache/pip
