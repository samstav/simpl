# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
#
# Running "tox" alone will run a simple test
#
# Running "tox -e full" will run a full test suite
#


[tox]
envlist = py27
skipsdist = True

##############
#  DEFAULT   #
##############
[testenv]
# This is the default setup. All other environments will inherit these settings

setenv =
    PYTHONHASHSEED = 0

# pull in dependencies from our pip-* files
deps=   -r{toxinidir}/requirements.txt
        -r{toxinidir}/test-requirements.txt

# install via develop method instead of dist package
usedevelop = True

# run nose and fail on first error
# run linting for code quality (and mainly pep8) on checkmate only by default
commands=
    nosetests -x {posargs}
    flake8 --exit-zero {posargs:checkmate}

# Cache pip downloads between runs and environments
downloadcache={toxinidir}/.tox/pip-cache


##############
# FULL       #
##############
[testenv:full]
# This is the full monty

# Run nose with coverage
# Run pylint and flake8 (disable error reporting for now)
commands =
    nosetests {posargs} --with-xcoverage --cover-package=checkmate --cover-tests --xcoverage-file=coverage.xml --with-xunit --nologcapture
    # Skipping errors on lint for now
    /bin/bash -c "flake8 --exit-zero {posargs:checkmate tests bin} > flake8.out"
    /bin/bash -c "pylint -f parseable {posargs:checkmate tests} > pylint.log || true"


##############
# END TO END #
##############
[testenv:e2e]
# This is full end to end testing

setenv =
    PYTHONPATH=$PYTHONPATH:{envdir}/CloudCAFE/lib

deps=   -r{toxinidir}/CloudCAFE-requirements.txt

commands =
    /bin/rm -rf {envdir}/CloudCAFE
    /usr/bin/git clone git@github.rackspace.com:checkmate/CloudCAFE-Python {envdir}/CloudCAFE
    {envdir}/CloudCAFE/bin/runner.py checkmate {posargs:localhost}.config -p pos_regr


##############
# SMOKETEST  #
##############
[testenv:smoke]
# This is full end to end testing

setenv =
    PYTHONPATH=$PYTHONPATH:{envdir}/CloudCAFE/lib

deps=   -r{toxinidir}/CloudCAFE-requirements.txt

commands =
    /bin/rm -rf {envdir}/CloudCAFE
    /usr/bin/git clone git@github.rackspace.com:checkmate/CloudCAFE-Python {envdir}/CloudCAFE
    {envdir}/CloudCAFE/bin/runner.py checkmate {posargs:localhost}.config -m smoketest


###############
# SIMULATIONS #
###############
[testenv:simulations]
# This runs blueprint simulations

setenv =
    PYTHONPATH=$PYTHONPATH:{envdir}/CloudCAFE/lib

deps=
        unittest2
        GitPython
        -r{toxinidir}/CloudCAFE-requirements.txt

commands =
    pip install -r {toxinidir}/CloudCAFE-requirements.txt
    /bin/rm -rf {envdir}/CloudCAFE
    /usr/bin/git clone git@github.rackspace.com:checkmate/CloudCAFE-Python {envdir}/CloudCAFE
    {envdir}/CloudCAFE/bin/runner.py checkmate {posargs:localhost}.config -m blueprint_validation


######################
# PULL REQUEST CHECK #
######################
[testenv:pr]
# This tests a new pull request
#
# - to run locally: tox -e pr 909
# - to run on jenkins: tox -e pr 909 {dev|qa|etc} {path/to/github/creds/file} http://jenkins/url
#

deps=   -r{toxinidir}/requirements.txt
        -r{toxinidir}/test-requirements.txt
        -r{toxinidir}/CloudCAFE-requirements.txt

commands =
    /bin/bash "tools/test_integration.sh {envdir} {toxinidir} {posargs} localhost gitcreds.txt http://localhost:8080"


######################
# PULL REQUEST CHECK #
######################
[testenv:prjenkins]
# Run nose with coverage
# Run pylint and flake8 (disable error reporting for now)
commands=
    nosetests {posargs} --with-xcoverage --cover-package=checkmate --cover-tests --xcoverage-file=coverage.xml --with-xunit --xunit-file=xunit.xml --nologcapture
    # Skipping errors on lint for now
    /bin/bash -c "flake8 --exit-zero {posargs:checkmate tests bin} > flake8.out"
    /bin/bash -c "pylint -f parseable {posargs:checkmate tests} > pylint.log || true"

#################
# dependency fetching check
#################
[testenv:tox-deps]
whitelist_externals =   /bin/bash
                        nosetests
recreate=True
deps=   {[testenv:pr]deps}

# Run nose with coverage
# Run pylint and flake8 (disable error reporting for now)
commands=
    nosetests tests/integration/test_dependencies.py --with-xcoverage --cover-package=checkmate --cover-tests --xcoverage-file=coverage.xml --with-xunit --xunit-file=xunit.xml
    # Skipping errors on lint for now



###############
# REAL DEPLOYMENTS #
###############
[testenv:deploys]
# This runs blueprint simulations

setenv =
    PYTHONPATH=$PYTHONPATH:{envdir}/CloudCAFE/lib

commands =
    pip install requests
    pip install -e git://github.rackspace.com/checkmate/pawn.git@master\#egg=pawn
    /bin/rm -rf {envdir}/CloudCAFE
    /usr/bin/git clone git@github.rackspace.com:checkmate/CloudCAFE-Python {envdir}/CloudCAFE
    {envdir}/CloudCAFE/bin/runner.py checkmate {posargs:localhost}.config -m deploy_validation


[flake8]
#flake8 default settings
#ignore = E226,E302,E41
#max-line-length = 160
max-complexity = 12


[tox:jenkins]
# Settings only valid in Jenkins
downloadcache = ~/cache/pip
